'''
## 문제

당신은 명작 만화영화 '뮬란'에 등장한 훈련법을 이용하여 수련하고자 한다.

이 훈련법은 아래와 같다.

- 높이가 `L`인 장대가 주어진다.
- 당신은 한 번에 `U`만큼 장대를 올라갈 수 있다.
- 장대를 한 번 올라간 후, 장대의 정상에 도달하지 못하면 `D`만큼 미끄러진다.
- 단, `U`는 항상 `D`보다 크다.

장대의 정상에 도착하기 위해서 몇 번 올라가야 하는지 구하시오.

## 입력설명

- `0 < L <= 100000`
- `0 < U <= 10000`
- `0 < D <= 10000`

## 출력설명

몇 번 올라야 하는지 정수로 반환

## 매개변수 형식

`L = 10`

`U = 5`

`D = 3`

## 반환값 형식

`4`

## 예시입출력 설명

- 1번 오른 결과 높이 변화: `0` -> `5` -> `2`
- 2번 오른 결과 높이 변화: `2` -> `7` -> `4`
- 3번 오른 결과 높이 변화: `4` -> `9` -> `6`
- 4번 오른 결과 높이 변화: `6` -> `10`(정상에 도달)

[*** 풀이 (Python) (100/100) ***]
'''

def solution(L, U, D):
    if U >= L:
        return 1
    count = (L - U + (U - D) - 1) // (U - D) + 1
    return count

'''
모범 답안

def solution(L, U, D):
    q, r = divmod((L - D), (U - D))
    return q if r == 0 else q + 1
    
'''